package com.jwl.integration.entity;

// Generated 12.11.2010 10:40:44 by Hibernate Tools 3.3.0.GA

import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name = "role")
public class Role implements java.io.Serializable {

	private static final long serialVersionUID = -7656397088324702487L;
	private int id;
	private String name;
	private boolean articleView;
	private boolean articleEdit;
	private boolean articleRename;
	private boolean articleRestore;
	private boolean articleLock;
	private boolean articleDelete;
	private boolean articleExcludeRole;
	private boolean attachmentView;
	private boolean attachmentAdd;
	private boolean attachmentDelete;
	private Set<Article> articles = new HashSet<Article>(0);

	public Role() {
	}

	public Role(int id, String name, boolean articleView, boolean articleEdit,
			boolean articleRename, boolean articleRestore, boolean articleLock,
			boolean articleDelete, boolean articleExcludeRole,
			boolean attachmentView, boolean attachmentAdd,
			boolean attachmentDelete) {
		this.id = id;
		this.name = name;
		this.articleView = articleView;
		this.articleEdit = articleEdit;
		this.articleRename = articleRename;
		this.articleRestore = articleRestore;
		this.articleLock = articleLock;
		this.articleDelete = articleDelete;
		this.articleExcludeRole = articleExcludeRole;
		this.attachmentView = attachmentView;
		this.attachmentAdd = attachmentAdd;
		this.attachmentDelete = attachmentDelete;
	}

	public Role(int id, String name, boolean articleView, boolean articleEdit,
			boolean articleRename, boolean articleRestore, boolean articleLock,
			boolean articleDelete, boolean articleExcludeRole,
			boolean attachmentView, boolean attachmentAdd,
			boolean attachmentDelete, Set<Article> articles) {
		this.id = id;
		this.name = name;
		this.articleView = articleView;
		this.articleEdit = articleEdit;
		this.articleRename = articleRename;
		this.articleRestore = articleRestore;
		this.articleLock = articleLock;
		this.articleDelete = articleDelete;
		this.articleExcludeRole = articleExcludeRole;
		this.attachmentView = attachmentView;
		this.attachmentAdd = attachmentAdd;
		this.attachmentDelete = attachmentDelete;
		this.articles = articles;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false, length = 25)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "articleView", nullable = false)
	public boolean isArticleView() {
		return this.articleView;
	}

	public void setArticleView(boolean articleView) {
		this.articleView = articleView;
	}

	@Column(name = "articleEdit", nullable = false)
	public boolean isArticleEdit() {
		return this.articleEdit;
	}

	public void setArticleEdit(boolean articleEdit) {
		this.articleEdit = articleEdit;
	}

	@Column(name = "articleRename", nullable = false)
	public boolean isArticleRename() {
		return this.articleRename;
	}

	public void setArticleRename(boolean articleRename) {
		this.articleRename = articleRename;
	}

	@Column(name = "articleRestore", nullable = false)
	public boolean isArticleRestore() {
		return this.articleRestore;
	}

	public void setArticleRestore(boolean articleRestore) {
		this.articleRestore = articleRestore;
	}

	@Column(name = "articleLock", nullable = false)
	public boolean isArticleLock() {
		return this.articleLock;
	}

	public void setArticleLock(boolean articleLock) {
		this.articleLock = articleLock;
	}

	@Column(name = "articleDelete", nullable = false)
	public boolean isArticleDelete() {
		return this.articleDelete;
	}

	public void setArticleDelete(boolean articleDelete) {
		this.articleDelete = articleDelete;
	}

	@Column(name = "articleExcludeRole", nullable = false)
	public boolean isArticleExcludeRole() {
		return this.articleExcludeRole;
	}

	public void setArticleExcludeRole(boolean articleExcludeRole) {
		this.articleExcludeRole = articleExcludeRole;
	}

	@Column(name = "attachmentView", nullable = false)
	public boolean isAttachmentView() {
		return this.attachmentView;
	}

	public void setAttachmentView(boolean attachmentView) {
		this.attachmentView = attachmentView;
	}

	@Column(name = "attachmentAdd", nullable = false)
	public boolean isAttachmentAdd() {
		return this.attachmentAdd;
	}

	public void setAttachmentAdd(boolean attachmentAdd) {
		this.attachmentAdd = attachmentAdd;
	}

	@Column(name = "attachmentDelete", nullable = false)
	public boolean isAttachmentDelete() {
		return this.attachmentDelete;
	}

	public void setAttachmentDelete(boolean attachmentDelete) {
		this.attachmentDelete = attachmentDelete;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "article_exclude_role", 
	joinColumns = { @JoinColumn(name = "role_id", nullable = false, updatable = false) }, 
	inverseJoinColumns = { @JoinColumn(name = "article_id", nullable = false, updatable = false) })
	public Set<Article> getArticles() {
		return Collections.unmodifiableSet(this.articles);
	}

	public void setArticles(Set<Article> articles) {
		this.articles = articles;
	}

}
