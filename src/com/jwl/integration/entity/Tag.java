package com.jwl.integration.entity;

// Generated 22.10.2010 10:15:44 by Hibernate Tools 3.3.0.GA
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import com.jwl.integration.BaseEntity;
import javax.persistence.NamedQueries;

/**
 * Tag generated by hbm2java
 */
@Entity
@Table(name = "tag")
@NamedQueries({
	@NamedQuery(name = "Tag.getByName", query = "SELECT t FROM Tag t WHERE t.name=?0"),
	@NamedQuery(name = "Tag.getAll", query = "SELECT t FROM Tag t ORDER BY t.name")
})
public class Tag extends BaseEntity implements java.io.Serializable {

	private static final long serialVersionUID = -1506300098837295561L;
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Integer id;
	@Column(name = "name", nullable = false, length = 45)
	private String name;
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "article_has_tag",
	joinColumns = {
		@JoinColumn(name = "tag_id", nullable = false, updatable = false)},
	inverseJoinColumns = {
		@JoinColumn(name = "article_id", nullable = false, updatable = false)})
	private Set<Article> articles = new HashSet<Article>(0);

	public Tag() {
	}

	public Tag(String name) {
		this.name = name;
	}

	public Tag(String name, Set<Article> articles) {
		this.name = name;
		this.articles = articles;
	}

	@Override
	public Integer getId() {
		return this.id;
	}

	@Override
	public void setId(Integer id) {
		this.id = id;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Set<Article> getArticles() {
		return this.articles;
	}

	public void setArticles(Set<Article> articles) {
		this.articles = articles;
	}

	@Override
	public boolean equals(Object obj) {
		if (!super.equals(obj)) {
			return false;
		} else if (obj instanceof Tag) {
			Tag other = (Tag) obj;
			return getName().equals(other.getName());
		} else {
			return true;
		}
	}

	@Override
	public int hashCode() {
		int hash = 7;
		hash = 47 * hash;
		if (this.id != null) {
			hash += this.id;
		}
		if (this.name != null) {
			hash += this.name.hashCode();
		}

		return hash;
	}
}
